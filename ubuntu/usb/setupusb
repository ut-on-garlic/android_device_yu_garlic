CONFIG_DIR=/dev/config
GADGET_DIR=$CONFIG_DIR/usb_gadget
SERIALNUMBER=`getprop ro.serialno`
MANUFACTURER=`getprop ro.product.manufacturer`
PRODUCT=`getprop ro.product.model`
PRODUCT_ID_SUFFIX=`getprop ro.usb.pid_suffix`
CONTROLLER=`getprop sys.usb.controller`
ANDROID_USB=/sys/class/android_usb/android0

write() {
    if [ ! -e "$1" ]; then
        return
    fi
	echo -n "$2" >"$1"
}

setup_mtp() {
    reset_usb
    write $ANDROID_USB/idVendor      18d1
    write $ANDROID_USB/idProduct     4ee2
    write $ANDROID_USB/iManufacturer "$MANUFACTURER"
    write $ANDROID_USB/iProduct      "$PRODUCT"
    write $ANDROID_USB/iSerial       "$SERIALNUMBER"
    write $ANDROID_USB/functions     mtp
    write $ANDROID_USB/enable        1
    setprop sys.usb.state mtp
}

setup_mtp_adb() {
    reset_usb
    write $ANDROID_USB/idVendor      18d1
    write $ANDROID_USB/idProduct     4ee2
    write $ANDROID_USB/iManufacturer "$MANUFACTURER"
    write $ANDROID_USB/iProduct      "$PRODUCT"
    write $ANDROID_USB/iSerial       "$SERIALNUMBER"
    write $ANDROID_USB/functions     mtp,adb:mtp,acm,diag,adb
    start android-tools-adbd
    sleep 4
    write $ANDROID_USB/enable        1
    setprop sys.usb.state mtp,adb
}

reset_usb() {
    write $ANDROID_USB/enable        0
    write $ANDROID_USB/functions     ""
}

setup_boot() {
    if [ -e /dev/.usb_setup_done ]; then
        echo "Boot setup done"
        return
    fi

    chown root:plugdev /dev/mtp_usb
    chmod 660 /dev/mtp_usb

    touch /dev/.usb_setup_done
}

setup_boot

if [ "$1" == "mtp" ]; then
    setup_mtp
elif [ "$1" == "mtp_adb" ]; then
    setup_mtp_adb
elif [ "$1" == "reset" ]; then
    reset_usb
else
    echo "No configuration selected."
fi

exit 0
